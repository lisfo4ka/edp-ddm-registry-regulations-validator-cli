[
  {
    "name": "Test template",
    "id": "testTemplate",
    "appliesTo": [
      "bpmn:ServiceTask"
    ],
    "properties": [
      {
        "label": "Property w/o constraint",
        "binding": {
          "type": "property",
          "name": "camunda:asyncBefore"
        }
      },
      {
        "label": "Property with constraint",
        "binding": {
          "type": "property",
          "name": "camunda:delegateExpression"
        },
        "constraints": {
          "notEmpty": true
        }
      },
      {
        "label": "Camunda property w/o constraint",
        "binding": {
          "type": "camunda:property",
          "name": "camundaPropertyWithoutConstraint"
        }
      },
      {
        "label": "Camunda property with constraint",
        "binding": {
          "type": "camunda:property",
          "name": "camundaPropertyWithConstraint"
        },
        "constraints": {
          "notEmpty": true,
          "type": "process.id"
        }
      },
      {
        "label": "Camunda in w/o constraint",
        "binding": {
          "type": "camunda:in",
          "target": "camundaInWithoutConstraint"
        }
      },
      {
        "label": "Camunda in with constraint",
        "binding": {
          "type": "camunda:in",
          "target": "camundaInWithConstraint"
        },
        "constraints": {
          "notEmpty": true
        }
      },
      {
        "label": "Camunda out w/o constraint",
        "binding": {
          "type": "camunda:out",
          "source": "camundaOutWithoutConstraint"
        }
      },
      {
        "label": "Camunda out with constraint",
        "binding": {
          "type": "camunda:out",
          "source": "camundaOutWithConstraint"
        },
        "constraints": {
          "notEmpty": true
        }
      },
      {
        "label": "Camunda input parameter w/o constraint",
        "binding": {
          "type": "camunda:inputParameter",
          "name": "camundaInputParameterWithoutConstraint"
        }
      },
      {
        "label": "Camunda input parameter with constraint",
        "binding": {
          "type": "camunda:inputParameter",
          "name": "camundaInputParameterWithConstraint"
        },
        "constraints": {
          "notEmpty": true,
          "type": "role.name"
        }
      },
      {
        "label": "Camunda input parameter with constraint",
        "binding": {
          "type": "camunda:inputParameter",
          "name": "table"
        },
        "constraints": {
          "notEmpty": true,
          "type": "table.rest-api-name"
        }
      },
      {
        "label": "Camunda input parameter with constraint",
        "binding": {
          "type": "camunda:inputParameter",
          "name": "compositeEntity"
        },
        "constraints": {
          "notEmpty": true,
          "type": "composite-entity.rest-api-name"
        }
      },
      {
        "label": "Camunda input parameter with constraint",
        "binding": {
          "type": "camunda:inputParameter",
          "name": "partialUpdateEntity"
        },
        "constraints": {
          "notEmpty": true,
          "type": "partial-update.rest-api-name"
        }
      },
      {
        "label": "Camunda input parameter with constraint",
        "binding": {
          "type": "camunda:inputParameter",
          "name": "externalSystemName"
        },
        "constraints": {
          "notEmpty": true,
          "type": "external-system.name"
        }
      },
      {
        "label": "Camunda input parameter with constraint",
        "binding": {
          "type": "camunda:inputParameter",
          "name": "externalSystemOperationName"
        },
        "constraints": {
          "notEmpty": true,
          "type": "external-system.operation.name"
        }
      },
      {
        "label": "Camunda input parameter with constraint",
        "binding": {
          "type": "camunda:inputParameter",
          "name": "excerptName"
        },
        "constraints": {
          "notEmpty": true,
          "type": "excerpt.name"
        }
      },
      {
        "label": "Camunda input parameter with constraint",
        "binding": {
          "type": "camunda:inputParameter",
          "name": "notificationName"
        },
        "constraints": {
          "notEmpty": true,
          "type": "notification.template.name"
        }
      },
      {
        "label": "Camunda output parameter w/o constraint",
        "binding": {
          "type": "camunda:outputParameter",
          "source": "camundaOutputParameterWithoutConstraint"
        }
      },
      {
        "label": "Camunda input parameter with constraint",
        "binding": {
          "type": "camunda:outputParameter",
          "source": "camundaOutputParameterWithConstraint"
        },
        "constraints": {
          "notEmpty": true
        }
      }
    ]
  },
  {
    "name": "User form",
    "id": "formUserTaskTemplate",
    "appliesTo": [
      "bpmn:UserTask"
    ],
    "properties": [
      {
        "label": "Form key",
        "type": "String",
        "binding": {
          "type": "property",
          "name": "camunda:formKey"
        },
        "constraints": {
          "notEmpty": true,
          "type": "form.name"
        }
      },
      {
        "label": "Assignee",
        "value": "${initiator}",
        "type": "String",
        "binding": {
          "type": "property",
          "name": "camunda:assignee"
        }
      },
      {
        "label": "Candidate users",
        "type": "String",
        "binding": {
          "type": "property",
          "name": "camunda:candidateUsers"
        }
      },
      {
        "label": "Candidate roles",
        "type": "String",
        "binding": {
          "type": "property",
          "name": "camunda:candidateGroups"
        }
      },
      {
        "label": "Form data pre-population",
        "description": "Value of the form data that will be pre-populated on user form<br/>e.g. ${formData} where formData is a variable with Spin JSON document of form ( S(map, 'application/json') )",
        "type": "String",
        "binding": {
          "type": "camunda:inputParameter",
          "name": "userTaskInputFormDataPrepopulate"
        }
      },
      {
        "label": "Form variables",
        "description": "Form variables that will be accessed by the form",
        "type": "String",
        "binding": {
          "type": "camunda:property",
          "name": "formVariables"
        }
      }
    ]
  }
]
